1)Display all the files from current directory whose size is greater that n Bytes Where n is accept from user.
#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <sys/stat.h>

void filterFilesBySize(int sizeThreshold) {
    DIR *dir;
    struct dirent *entry;

    // Open the current directory
    dir = opendir(".");

    if (dir == NULL) {
        perror("Error opening directory");
        exit(EXIT_FAILURE);
    }

    // Iterate through directory entries
    while ((entry = readdir(dir)) != NULL) {
        // Get file information
        struct stat fileInfo;
        if (stat(entry->d_name, &fileInfo) == -1) {
            perror("Error getting file information");
            continue;
        }

        // Check if the entry is a regular file and its size is greater than the threshold
        if (entry->d_type == DT_REG && fileInfo.st_size > sizeThreshold) {
            printf("%s - Size: %ld bytes\n", entry->d_name, fileInfo.st_size);
        }
    }

    // Close the directory
    closedir(dir);
}

int main() {
    int sizeThreshold;

    // Get user input for size threshold
    printf("Enter size threshold in bytes: ");
    scanf("%d", &sizeThreshold);

    // Print files with size greater than the specified threshold
    printf("Files with size greater than %d bytes:\n", sizeThreshold);
    filterFilesBySize(sizeThreshold);

    return 0;
}

==================================================================================
2)Write a C program to find file properties such as inode number, number of hard link, File permissions, File size, File access and modification time and so on of a given file using stat() system call.

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <time.h>

void displayFileProperties(const char *filename) {
    struct stat fileInfo;

    // Get file information using stat
    if (stat(filename, &fileInfo) == -1) {
        perror("Error getting file information");
        exit(EXIT_FAILURE);
    }

    // Display file properties
    printf("File Properties for %s:\n", filename);
    printf("Inode Number: %lu\n", (unsigned long)fileInfo.st_ino);
    printf("Number of Hard Links: %lu\n", (unsigned long)fileInfo.st_nlink);
    printf("File Permissions: %o\n", fileInfo.st_mode & 0777);
    printf("File Size: %ld bytes\n", (long)fileInfo.st_size);

    // Display access and modification times
    printf("Last Access Time: %s", ctime(&fileInfo.st_atime));
    printf("Last Modification Time: %s", ctime(&fileInfo.st_mtime));
}

int main(int argc, char *argv[]) {
    // Check if a filename is provided
    if (argc != 2) {
        fprintf(stderr, "Usage: %s <filename>\n", argv[0]);
        exit(EXIT_FAILURE);
    }

    // Display file properties
    displayFileProperties(argv[1]);

    return 0;
}
